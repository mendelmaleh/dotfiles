# vim: ts=4 et

# keys
set {
    $mod Mod4
    $left h
    $down j
    $up k
    $right l
}

# apps
set {
    $term foot

    # note: pass the final command to swaymsg so that the resulting window can be opened
    # on the original workspace that the command was run on.
    $menu dmenu_path | dmenu | xargs swaymsg exec --
}

# launch terminal on start
exec $term bash -c "pfetch; bash"

### output configuration
#
# default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/sway_wallpaper_blue_1920x1080.png fill
#
# example configuration:
#
#   output hdmi-a-1 resolution 1920x1080 position 1920,0
#
# you can get the names of your outputs by running: swaymsg -t get_outputs

### idle configuration
#
# example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# this will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. it will also lock your screen before your computer goes to sleep.

### input configuration
#
# example configuration:
#
#   input "2:14:synps/2_synaptics_touchpad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# you can get the names of your inputs by running: swaymsg -t get_inputs
# read `man 5 sway-input` for more information about this section.

# basic keybindings
bindsym {
    # start a terminal
    $mod+Return exec $term

    # kill focused window
    $mod+Shift+q kill

    # start your launcher
    $mod+d exec $menu

    # reload the configuration file
    $mod+Shift+c reload

    # exit sway (logs you out of your wayland session)
    $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
}

# drag floating windows by holding down $mod and left mouse button.
# resize them with right mouse button + $mod.
# despite the name, also works for non-floating windows.
# change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# moving around
bindsym {
    # move your focus around
    $mod+$left focus left
    $mod+$down focus down
    $mod+$up focus up
    $mod+$right focus right
    # or use $mod+[up|down|left|right]
    $mod+Left focus left
    $mod+Down focus down
    $mod+Up focus up
    $mod+Right focus right

    # move the focused window with the same, but add shift
    $mod+Shift+$left move left
    $mod+Shift+$down move down
    $mod+Shift+$up move up
    $mod+Shift+$right move right
    # ditto, with arrow keys
    $mod+Shift+Left move left
    $mod+Shift+Down move down
    $mod+Shift+Up move up
    $mod+Shift+Right move right
}

# workspaces
bindsym {
    # switch to workspace
    $mod+1 workspace number 1
    $mod+2 workspace number 2
    $mod+3 workspace number 3
    $mod+4 workspace number 4
    $mod+5 workspace number 5
    $mod+6 workspace number 6
    $mod+7 workspace number 7
    $mod+8 workspace number 8
    $mod+9 workspace number 9
    $mod+0 workspace number 10

    # move focused container to workspace
    $mod+Shift+1 move container to workspace number 1
    $mod+Shift+2 move container to workspace number 2
    $mod+Shift+3 move container to workspace number 3
    $mod+Shift+4 move container to workspace number 4
    $mod+Shift+5 move container to workspace number 5
    $mod+Shift+6 move container to workspace number 6
    $mod+Shift+7 move container to workspace number 7
    $mod+Shift+8 move container to workspace number 8
    $mod+Shift+9 move container to workspace number 9
    $mod+Shift+0 move container to workspace number 10
}


# layout keybinds
bindsym {
    # you can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    $mod+b splith
    $mod+v splitv

    # switch the current container between different layout styles
    $mod+s layout stacking
    $mod+w layout tabbed
    $mod+e layout toggle split

    # make the current focus fullscreen
    $mod+f fullscreen

    # toggle the current focus between tiling and floating mode
    $mod+Shift+space floating toggle

    # swap focus between the tiling area and the floating area
    $mod+space focus mode_toggle

    # move focus to the parent container
    $mod+a focus parent
}

# scratchpad
bindsym {
    # move the currently focused window to the scratchpad
    $mod+Shift+minus move scratchpad

    # show the next scratchpad window or hide the focused scratchpad window.
    # if there are multiple scratchpad windows, this command cycles through them.
    $mod+minus scratchpad show
}

# resizing containers
mode "resize" {
    bindsym {
        # right will grow the containers width
        # left will shrink the containers width
        # up will shrink the containers height
        # down will grow the containers height
        $right resize grow width 10px
        $left resize shrink width 10px
        $up resize shrink height 10px
        $down resize grow height 10px

        # ditto, with arrow keys
        Left resize shrink width 10px
        Down resize grow height 10px
        Up resize shrink height 10px
        Right resize grow width 10px

        # return to default mode
        Return mode "default"
        Escape mode "default"
    }
}

bindsym $mod+r mode "resize"

# colors
set {
    $black  #161821
    $red    #e27878
    $green  #b4be82
    $yellow #e2a478
    $blue   #84a0c6
    $purple #a093c7
    $cyan   #89b8c2
    $white  #c6c8d1

    # added transparency (88)
    $gray   #8389a388

    $bg     $black
    $text   $white
    $acc    $blue
    $sec    $cyan
    $ter    $green
}

# class                 border  bg      text    indicator   child_border
client.focused          $acc    $acc    $text   $ter
client.focused_inactive $purple $purple $text   $ter
client.unfocused        $gray   $gray   $text   $ter
client.urgent           $red    $red    $text   $ter

# other theming
gaps inner 4
default_border pixel 2
# titlebar_border_thickness 0
# titlebar_padding 7 4

# background
output * bg $black solid_color

# font
font pango:Dejavu Sans Mono 14px

# status bar
bar {
    # opposite of docs
    gaps 0 4
    position top

    # when the status_command prints a new line to stdout, swaybar updates.
    # the default just shows the current date and time.
    status_command while date +'%Y-%m-%d %H:%M'; do sleep 1; done

    colors {
        statusline $white
        background $black
        separator  $red

        #                   border  bg      text
        focused_workspace   $black  $blue   $black
        active_workspace    $black  $green  $white
        inactive_workspace  $black  $black  $white
        urgent_workspace    $black  $red    $white
        binding_mode        $black  $red    $black
    }
}

include /etc/sway/config.d/*
